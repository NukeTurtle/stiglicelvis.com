name: Update Github Repos

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Fetch and save github repos
        run: |
          npm install axios
          node -e "
          const axios = require('axios');
          const fs = require('fs');
          const username = 'YOUR_GITHUB_USERNAME';
          const token = process.env.GITHUB_TOKEN;
          const url = \`https://api.github.com/users/\${username}/starred\`;
          const headers = { 'Authorization': \`token \${token}\` };
          const fetchStarredRepos = async (url) => {
            let repos = [];
            while (url) {
              const response = await axios.get(url, { headers });
              repos = repos.concat(response.data);
              const linkHeader = response.headers.link;
              if (linkHeader) {
                const links = linkHeader.split(',').reduce((acc, link) => {
                  const [url, rel] = link.split(';').map(part => part.trim());
                  const cleanUrl = url.slice(1, -1);
                  const cleanRel = rel.slice(5, -1);
                  acc[cleanRel] = cleanUrl;
                  return acc;
                }, {});
                url = links.next || null;
              } else {
                url = null;
              }
            }
            return repos;
          };
          fetchStarredRepos(url).then(repos => {
            fs.writeFileSync('_data/starred_repos.json', JSON.stringify(repos, null, 2));
          }).catch(error => console.error('Error:', error));
          "
        env:
          GITHUB_TOKEN: ${{ secrets.API_KEY }}

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add _data/github_repos.json
          git commit -m 'Update github repositories'
          git push
